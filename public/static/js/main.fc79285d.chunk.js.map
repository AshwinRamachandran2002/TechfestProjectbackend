{"version":3,"sources":["App.js","index.js"],"names":["urlnew","urlsub","urlass","useStyles","makeStyles","theme","root","height","image","backgroundImage","backgroundRepeat","backgroundColor","palette","type","grey","backgroundSize","backgroundPosition","paper","margin","spacing","display","flexDirection","alignItems","avatar","secondary","main","form","width","marginTop","submit","NavigationBar","className","src","alt","AssignedLeads","useState","leads","setLeads","getLeads","a","fetch","response","json","exportToCSV","exportToCSVval","exportToCSVrej","exportToCSVclo","useEffect","arrayShows","Array","length","i","shows","setShows","updateShows","arg","newshows","Fragment","onClick","map","lead","index","_id","subto","subby","segdet","namecust","projdet","status","dollarVal","datecreated","key","id","SubmittedLeads","props","General","Logout","App","whichPart","setWhichPart","user","setUser","urlsignin","urlsignup","classes","showSignUpError","setShowSignUpError","showSignInError","setShowSignInError","signInDet","setSignInDet","signUpDet","setSignUpDet","getSignInResponse","isSignInOk","console","log","message","userId","getSignUpResponse","isSignUpOk","changeView","leadIntakes","setLeadIntakes","setLead","handleChange","e","name","target","value","newLead","domainInputValue","headers","method","body","request","inputTaken","Grid","container","component","CssBaseline","item","xs","sm","md","Paper","elevation","square","Avatar","Typography","variant","noValidate","onChange","TextField","required","fullWidth","label","autoComplete","autoFocus","Button","color","preventDefault","firstname","email","opco","Link","href","class","to","path","maxlength","sendBack","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fc79285d.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Linker from '@material-ui/core/Link';\nimport Paper from '@material-ui/core/Paper';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {useState, useEffect} from 'react'\nimport { Link } from 'react-router-dom';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport './index.css'\nlet urlnew = 'danaherlms.github.io/home/newleadinput';\nlet urlsub = 'danaherlms.github.io/home/subleadinput';\nlet urlass = 'danaherlms.github.io/home/assleadinput';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: '100vh',\n  },\n  image: {\n    backgroundImage: 'url(https://financesonline.com/uploads/2018/03/lead1.png)',\n    backgroundRepeat: 'no-repeat',\n    backgroundColor:\n      theme.palette.type === 'light' ? theme.palette.grey[50] : theme.palette.grey[900],\n    backgroundSize: 'cover',\n    backgroundPosition: 'center',\n  },\n  paper: {\n    margin: theme.spacing(8, 4),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nfunction App() {\n  const [whichPart,setWhichPart] = useState(0);\n  const [user,setUser] = useState(\"_@_\");\n  let urlsignin = \"\";\n  let urlsignup = \"\";\n  const classes = useStyles();\n  const [showSignUpError,setShowSignUpError] = useState(false);\n  const [showSignInError,setShowSignInError] = useState(false);\n  const [signInDet,setSignInDet] = useState({\n    \"firstname\": \"\",\n    \"email\": \"\",\n    \"opco\": \"\"\n  });\n  const signInHandleChange = (e) => {\n    const name = e.target.name;\n    const value = e.target.value;\n    setSignInDet({ ...signInDet, [name]: value });\n    console.log('signin')\n  };\n  const signInHandleSubmit = (e) => {\n    e.preventDefault();\n    if (signInDet.firstname && signInDet.email && signInDet.opco) {\n      urlsignin = `/signin/${signInDet.firstname}/${signInDet.email}/${signInDet.opco}`;\n      console.log(urlsignin);\n      getSignInResponse();\n    }\n  };\n  const [signUpDet,setSignUpDet] = useState({\n    \"firstname\": \"\",\n    \"email\": \"\",\n    \"opco\": \"\"\n  });\n  const signUpHandleChange = (e) => {\n    const name = e.target.name;\n    const value = e.target.value;\n    setSignUpDet({ ...signUpDet, [name]: value });\n  };\n  const signUpHandleSubmit = (e) => {\n    e.preventDefault();\n    if (signUpDet.firstname && signUpDet.email && signUpDet.opco) {\n    urlsignup = `/signup/${signUpDet.firstname}/${signUpDet.email}/${signUpDet.opco}`;\n    getSignUpResponse();\n    }\n  };\n  const getSignInResponse = async() => {\n    const response = await fetch(urlsignin);\n      const isSignInOk = await response.json();\n      console.log(isSignInOk);\n      if (isSignInOk.message == \"Valid\") { setUser(isSignInOk.userId);\n      urlnew = `/${isSignInOk.userId}/home/submit/newleadinput`;\n      urlsub = `/${isSignInOk.userId}/home/submit/subleadinput`;\n      urlass = `/${isSignInOk.userId}/home/submit/assleadinput`;\n      setWhichPart(2);\n      }\n      else {setShowSignInError(true);}\n    // console.log(users);\n  };\n  const getSignUpResponse = async() => {\n    const response = await fetch(urlsignup);\n      const isSignUpOk = await response.json();\n      if (isSignUpOk.message == \"Valid\"\n      ) {setUser(isSignUpOk.userId);\n            urlnew = `/${isSignUpOk.userId}/home/submit/newleadinput`;\n      urlsub = `/${isSignUpOk.userId}/home/submit/subleadinput`;\n      urlass = `/${isSignUpOk.userId}/home/submit/assleadinput`}\n      else {setShowSignUpError(true);setWhichPart(2);}\n  };\n  const changeView = () => {\n      setWhichPart(1-whichPart);\n  }\n  const [leadIntakes,setLeadIntakes] = useState([]);\n  const getLeads = async() => {\n    const response = await fetch(urlsub);\n    const leads = await response.json();\n    setLeadIntakes(leadIntakes);\n    // console.log(users);\n  };\n  useEffect(() => {\n      getSignUpResponse();\n      getSignInResponse();\n      getLeads();\n  },[]);\n  // let leadIntakes = require('./files/listOfLeads.json');\n  const [leads, setLeads] = useState(leadIntakes);\n  const [lead,setLead] = useState({\n        \"_id\":\"\",\n        \"subto\":\"\",\n        \"subby\":\"\",\n        \"segdet\":\"\",\n        \"projdet\":\"\",\n        \"namecust\":\"\",\n        \"status\":\"Open\",\n        \"dollarVal\": \"\",\n        \"datecreated\":\"\",\n        \"datevalidated\":\"\",\n        \"daterejected\":\"\",\n        \"dateclosed\":\"\"});\n  const handleChange = (e) => {\n    const name = e.target.name;\n    const value = e.target.value;\n    setLead({ ...lead, [name]: value });\n  };\n    async function sendBack (newLead) {\n    const { domainInputValue } = newLead;\n    const request = await fetch('/submission', {\n        headers: {\n            'Content-type': 'application/json'\n        },\n        method: 'POST',\n        body: { domainInputValue }\n    });\n    const inputTaken = await request.json();\n    leads[leads.length-1]._id = inputTaken._id;\n}\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (lead.subto && lead.subby && lead.segdet && lead.projdet && lead.dollarVal && lead.namecust) {\n      const newLead = { ...lead, id: leads.length };\n      setLeads([...leads, newLead]);\n      sendBack(newLead);\n      setLead({ subto:\"\",\n        subby:\"\",\n        segdet:\"\",\n        projdet:\"\",\n        namecust:\"\",\n        dollarVal:\"\"});\n    };\n  };\n    return (\n        <React.Fragment>\n      {whichPart === 1 && (\n        <Grid container component=\"main\" className={classes.root}>\n      <CssBaseline />\n      <Grid item xs={false} sm={4} md={8} className={classes.image} />\n      <Grid item xs={12} sm={8} md={4} component={Paper} elevation={6} square>\n        <div className={classes.paper}>\n          <Avatar className={classes.avatar}>\n            <LockOutlinedIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            Sign in\n          </Typography>\n          {showSignInError && (<Typography component=\"h5\" variant=\"h6\">\n            Invalid Combination.\n          </Typography>)}\n          <form className={classes.form} noValidate onChange = {signInHandleChange}>\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"firstname\"\n              label=\"First Name\"\n              name=\"firstname\"\n              autoComplete=\"firstname\"\n              autoFocus\n            />\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"email\"\n              label=\"Enterprise Email Address\"\n              name=\"email\"\n              autoComplete=\"email\"\n              autoFocus\n            />\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              name=\"opco\"\n              label=\"OpCo\"\n              id=\"opco\"\n            />\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.submit}\n              onClick = {signInHandleSubmit}\n            >\n              Sign In\n            </Button>\n            <Grid container>\n              <Grid item xs>\n                <Linker href=\"#\" variant=\"body2\">\n                  \n                </Linker>\n              </Grid>\n              <Grid item>\n                <Linker href=\"#\" variant=\"body2\" onClick = {changeView}>\n                  {\"Don't have an account? Sign Up\"}\n                </Linker>\n              </Grid>\n            </Grid>\n          </form>\n        </div>\n      </Grid></Grid>)}\n\n\n      {whichPart === 0 && (\n        <Grid container component=\"main\" className={classes.root}>\n      <CssBaseline />\n      <Grid item xs={false} sm={4} md={8} className={classes.image} />\n      <Grid item xs={12} sm={8} md={4} component={Paper} elevation={6} square>\n        <div className={classes.paper}>\n          <Avatar className={classes.avatar}>\n            <LockOutlinedIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            Sign Up\n          </Typography>\n          {showSignUpError && (<Typography component=\"h5\" variant=\"h6\">\n            E-mail already registered.\n          </Typography>)}\n          <form className={classes.form} noValidate onChange = {signUpHandleChange}>\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"firstname\"\n              label=\"First Name\"\n              name=\"firstname\"\n              autoComplete=\"firstname\"\n              autoFocus\n            />\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"email\"\n              label=\"Enterprise Email Address\"\n              name=\"email\"\n              autoComplete=\"email\"\n              autoFocus\n            />\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              name=\"opco\"\n              label=\"OpCo\"\n              id=\"opco\"\n            />\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              color=\"primary\"\n              onClick = {signUpHandleSubmit}\n              className={classes.submit}\n            >\n              Sign Up\n            </Button>\n            <Grid container>\n              <Grid item xs>\n                <Linker href=\"#\" variant=\"body2\">\n                  \n                </Linker>\n              </Grid>\n              <Grid item>\n                <Linker href=\"#\" variant=\"body2\" onClick = {changeView}>\n                  {\"Have an account? Sign In\"}\n                </Linker>\n              </Grid>\n            </Grid>\n          </form>\n        </div>\n      </Grid></Grid>)}\n        \n      {whichPart === 2 && (\n        <Router>\n        <div className = \"all\">\n        <NavigationBar/>\n        <div className = \"bottompart\">\n        <div className = \"bottomleftpart\">\n        <div id=\"mySidenav\" class=\"sidenav\">\n        <Link to = {`/${user}/form`}><button className=\"btn\">Create a New Lead</button></Link>\n        <Link to = {`/${user}/assigned`}><button className=\"btn\">Assigned Leads</button></Link>\n        <Link to = {`/${user}/submitted`}><button className=\"btn\">Submitted Leads</button></Link>\n        <Link to = {`/${user}/logout`}><button className=\"btn\" onClick = {() => setWhichPart(0)}>Logout</button></Link>\n        </div>\n        </div>\n        <div className=\"bottomrightpart\">\n        <Switch>\n        <Route path = {`/${user}/form`}>\n          <React.Fragment>\n          <div className=\"submissionForm\">\n            <div className=\"formNameZone\">Submit a Lead here!</div>\n            <div className = \"submissionInputZone\">\n            <div className=\"customerNameDescriptionClass\">Customer's Name: </div>\n            <div className=\"detailsDescriptionClass\">Project Details: </div>\n            <div className=\"segmentDetailsDescriptionClass\">Segment Details: </div>\n            <div className=\"submittedToDescriptionClass\">Submit to: </div>\n            <div className=\"dollarvalueDescriptionClass\">Monetary Value: </div>\n            <div className=\"submittedByDescriptionClass\">Submitted by: </div>\n\n            <div className=\"customerNameInputClass\"><textarea \n              maxlength = {50} \n              className = \"defaultInput\"\n              id='custName'\n              name='namecust'\n              value={lead.namecust}\n              onChange={handleChange}/></div>\n              <div className=\"segmentDetailsInputClass\"><textarea maxlength = {50} className = \"defaultInput\"\n              id='segDetails'\n              name='segdet'\n              value={lead.segdet}\n              onChange={handleChange}/></div>\n            <div className=\"detailsInputClass\"><textarea maxlength = {400} className = \"defaultInput\" \n              id='details'\n              name='projdet'\n              value={lead.projdet}\n              onChange={handleChange}/></div>\n            <div className=\"dollarvalueInputClass\"><textarea maxlength = {50} className = \"defaultInput\"\n              id='dollar'\n              name='dollarVal'\n              value={lead.dollarVal}\n              onChange={handleChange}/></div>\n            <div className=\"submittedToInputClass\"><textarea maxlength = {50} className = \"defaultInput\"\n              id='subTo'\n              name='subto'\n              value={lead.subto}\n              onChange={handleChange}/></div>\n            <div className=\"submittedByInputClass\"><textarea maxlength = {50} className = \"defaultInput\"id='subBy'\n              name='subby'\n              value={lead.subby}\n              onChange={handleChange}/></div>\n            </div>\n            <div className=\"submitButtonZone\"><button type=\"submit\" className=\"btn2\" onClick = {handleSubmit}>Submit</button></div>\n        </div>\n          </React.Fragment>\n        </Route>\n        <Route path = {`/${user}/assigned`}><AssignedLeads/></Route>\n        <Route path = {`/${user}/submitted`}><SubmittedLeads arg={leads}/></Route>\n        <Route path = {`/${user}/logout`}><Logout/></Route>\n        <Route path = \"*\"><General/></Route>\n        </Switch>\n        </div>\n        </div>\n        </div>\n        </Router>)}\n    \n        </React.Fragment>\n    )\n}\n\nfunction NavigationBar() {\n    return (\n        <div className = \"topNavBar\">\n        <img src=\"https://www.danaher.com/themes/danaher_bootstrap/logo.svg\" className = \"startLogo\" alt=\"\"/>{' '}\n        <h1 className = \"lmSystem\">Lead Management System</h1>\n        </div>\n    )\n}\nconst AssignedLeads = () => {\n  const [leads,setLeads] = useState([]);\n  const getLeads = async() => {\n    const response = await fetch(urlass);\n    const leads = await response.json();\n    setLeads(leads);\n    // console.log(users);\n  };\n  const exportToCSV = async() => {\n    const response = await fetch('/getcsv');\n    const noRespNeded = await response.json();\n  }\n  const exportToCSVval = async() => {\n    const response = await fetch('/getcsvvalidated');\n    const noRespNeded = await response.json();\n  }\n  const exportToCSVrej = async() => {\n    const response = await fetch('/getcsvrejected');\n    const noRespNeded = await response.json();\n  }\n  const exportToCSVclo = async() => {\n    const response = await fetch('/getcsvclosed');\n    const noRespNeded = await response.json();\n  }\n  useEffect(() => {\n    getLeads();\n    exportToCSV();\n    exportToCSVrej();\n    exportToCSVval();\n    exportToCSVclo();\n  },[]);\n  // const leads = require('./files/listOfLeads.json');\n  var arrayShows = new Array (leads.length);\n  for (var i = 0; i < arrayShows.length; ++i) { arrayShows[i] = false; }\n  const [shows, setShows] = useState(arrayShows);\n  const updateShows = (arg) => {\n    let newshows = shows;\n    newshows[arg]=!newshows[arg];\n    setShows([...newshows]);\n  };\n\n  const closeLeadClick = (id) => {\n    leads[id].status = \"Closed\";\n    updateShows(id);\n  }\n\n  const validateLeadClick = (id) => {\n    leads[id].status = \"Validated\";\n    updateShows(id);\n  }\n\n  const rejectLeadClick = (id) => {\n    leads[id].status = \"Rejected\";\n    updateShows(id);\n  }\n\n  return (\n    <React.Fragment>\n      <h1 className=\"leadsCentered\">Assigned Leads</h1>\n      <button className = \"btn2\" onClick = {exportToCSV}>Export All to CSV</button>\n      <button className = \"btn2\" onClick = {exportToCSVrej}>Export Rejected to CSV</button>\n      <button className = \"btn2\" onClick = {exportToCSVclo}>Export Closed to CSV</button>\n      <button className = \"btn2\" onClick = {exportToCSVval}>Export Validated to CSV</button>\n      <div className = \"viewLeads\">\n      <ul className = \"users\">\n      {leads.map((lead,index)=> {\n        const {_id,subto,subby,segdet, namecust,projdet,status, datecreated, dollarVal} = lead; \n        return (<li key={_id}>\n        <div className = \"black-background\">\n          <div className = \"custnameArea\">\n          <p className=\"nameonlyArea\">{namecust}</p>\n          <p className=\"dollarValueArea\">Value: $ {dollarVal}</p>\n          </div>\n          <div className = \"submitToByArea\">\n          <p className=\"submitToArea\">Submitted to: {subto}</p>\n          <p className=\"submitByArea\">Submitted by: {subby}</p>\n          </div>\n        </div>\n        <div className = \"red-background\">\n          <h4 className = \"segmentDet\">Segment Details: {segdet}</h4>\n          <div className = \"buttonandstatus\">\n          <h4 className = \"statusbtn\">{status}</h4>\n          {!shows[index] &&\n          <button className=\"btnview\" onClick={() => updateShows(index)}>View Details</button>}\n          {shows[index] &&\n          <button className=\"btnview\" onClick={() => updateShows(index)}>Back</button>}\n          </div>\n        </div>\n        {shows[index] && (\n          <React.Fragment>\n            <div className = \"extraDetails\">\n              <div className=\"projectDetailZone\"><b>Project Details: </b>{projdet}</div>\n              {status===\"Open\"&&(<React.Fragment><button className=\"btn firstButton\" onClick={() => validateLeadClick(index)}>Validate Lead</button><button className=\"btn firstButton\" onClick={() => rejectLeadClick(index)}>Reject Lead</button></React.Fragment>)}\n              {status===\"Validated\"&&<button className=\"btn firstButton\" onClick={() => closeLeadClick(index)}>Close Lead</button>}\n            </div>\n          </React.Fragment>\n        )}\n        </li>)\n      })}\n      </ul>\n      </div>\n    </React.Fragment>\n  );\n}\n\nconst SubmittedLeads = (props) => {\n  //   const [leads,setLeads] = useState([]);\n  // const getLeads = async() => {\n  //   const response = await fetch(url);\n  //   const leads = await response.json();\n  //   setLeads(leads);\n  //   // console.log(users);\n  // };\n  // useEffect(() => {\n  //   getLeads();\n  // },[]);\n  // const leads = require('./files/listOfLeads.json');\n  let leads = props.arg;\n  var arrayShows = new Array (leads.length);\n  for (var i = 0; i < arrayShows.length; ++i) { arrayShows[i] = false; }\n  const [shows, setShows] = useState(arrayShows);\n  const updateShows = (index) => {\n    let newshows = shows;\n    newshows[index] = !newshows[index];\n    setShows([...newshows]);\n  };\n  \n  return (\n    <React.Fragment>\n      <h1 className=\"leadsCentered\">Submitted Leads</h1>\n      <div className = \"viewLeads\">\n      <ul className = \"users\">\n      {leads.map((lead,index)=> {\n        const {_id,subto,subby,segdet, projdet, namecust, status, datecreated, dollarVal} = lead; \n        return (<li key={_id}>\n        <div className = \"black-background\">\n          <div className = \"custnameArea\">\n          <p className=\"nameonlyArea\">{namecust}</p>\n          <p className=\"dollarValueArea\">Value: $ {dollarVal}</p>\n          </div>\n          <div className = \"submitToByArea\">\n          <p className=\"submitToArea\">Submitted to: {subto}</p>\n          <p className=\"submitByArea\">Submitted by: {subby}</p>\n          </div>\n        </div>\n        <div className = \"red-background\">\n          <h4 className = \"segmentDet\">Segment Details: {segdet}</h4>\n          <div className = \"buttonandstatus\">\n          <h4 className = \"statusbtn\">{status}</h4>\n          {!shows[index] &&\n          <button className=\"btnview\" onClick={() => updateShows(index)}>View Details</button>}\n          {shows[index] &&\n          <button className=\"btnview\" onClick={() => updateShows(index)}>Back</button>}\n          </div>\n        </div>\n        {shows[index] && (\n          <React.Fragment>\n            <div className = \"extraDetails\">\n              <div className=\"projectDetailZone\"><b>Project Details: </b>{projdet}</div>\n            </div>\n          </React.Fragment>\n        )}\n        </li>)\n      })}\n      </ul>\n      </div>\n    </React.Fragment>\n  );\n}\n\nconst General = () => {\n  const [leads,setLeads] = useState([]);\n  const getLeads = async() => {\n    const response = await fetch(urlnew);\n    const leads = await response.json();\n    setLeads(leads);\n    // console.log(users);\n  };\n  useEffect(() => {\n    getLeads();\n  },[]);\n  var arrayShows = new Array (leads.length);\n  for (var i = 0; i < arrayShows.length; ++i) { arrayShows[i] = false; }\n  const [shows, setShows] = useState(arrayShows);\n  const updateShows = (index) => {\n    let newshows = shows;\n    newshows[index] = !newshows[index];\n    setShows([...newshows]);\n  };\n  // const leads = require('./files/listOfLeads.json');\n  return (\n    <React.Fragment>\n      <h1 className=\"leadsCentered\">New Leads!</h1>\n      <div className = \"viewLeads\">\n      <ul className = \"users\">\n      {leads.map((lead,index)=> {\n        const {_id,subto,subby,segdet,projdet, namecust, status, datecreated, dollarVal} = lead; \n        return (<li key={_id}>\n        <div className = \"black-background\">\n          <div className = \"custnameArea\">\n          <p className=\"nameonlyArea\">{namecust}</p>\n          <p className=\"dollarValueArea\">Value: $ {dollarVal}</p>\n          </div>\n          <div className = \"submitToByArea\">\n          <p className=\"submitToArea\">Submitted to: {subto}</p>\n          <p className=\"submitByArea\">Submitted by: {subby}</p>\n          </div>\n        </div>\n        <div className = \"red-background\">\n          <h4 className = \"segmentDet\">Segment Details: {segdet}</h4>\n          <div className = \"buttonandstatus\">\n          <h4 className = \"statusbtn\">{status}</h4>\n          {!shows[index] &&\n          <button className=\"btnview\" onClick={() => updateShows(index)}>View Details</button>}\n          {shows[index] &&\n          <button className=\"btnview\" onClick={() => updateShows(index)}>Back</button>}\n          </div>\n          {shows[index] && (\n          <React.Fragment>\n            <div className = \"extraDetails\">\n              <div className=\"projectDetailZone\"><b>Project Details: </b>{projdet}</div>\n            </div>\n          </React.Fragment>\n        )}\n        </div>\n        </li>)\n      })}\n      </ul>\n      </div>\n    </React.Fragment>\n  );\n}\n\nconst Logout = () => {\n  //   const [leads,setLeads] = useState([]);\n  // const getLeads = async() => {\n  //   const response = await fetch(url);\n  //   const leads = await response.json();\n  //   setLeads(leads);\n  //   // console.log(users);\n  // };\n  // useEffect(() => {\n  //   getLeads();\n  // },[]);\n  // const leads = require('./files/listOfLeads.json');\n\n  return (\n    <React.Fragment>\n      \n    </React.Fragment>\n  );\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}